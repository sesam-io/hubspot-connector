[
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-all",
    "namespaced_identifiers": false,
    "source": {
      "operation": "{{@ datatype @}}-list",
      "system": "{{@ system @}}",
      "type": "rest"
    },
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-collect",
    "exclude_completeness": [
      "{{@ system @}}-{{@ datatype @}}-share"
    ],
    "namespaced_identifiers": false,
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-all",
      "type": "dataset"
    },
    "transform": {
      "rules": {
        "default": [
          [
            "copy",
            "*"
          ],
          [
            "comment",
            "when inserted, we get two ids back, so this origin lookup checks if typeId was in any of the generated ids"
          ],
          [
            "add",
            "_origin",
            [
              "first",
              [
                "hops",
                {
                  "datasets": [
                    "{{@ system @}}-{{@ datatype @}}-share st"
                  ],
                  "return": "st.$origin",
                  "track-dependencies": false,
                  "where": [
                    [
                      "eq",
                      "_S.typeId",
                      [
                        "last",
                        "st.$generated_id"
                      ]
                    ]
                  ]
                }
              ]
            ]
          ],
          [
            "comment",
            "only add origin for USER_DEFINED category to be on the safe side, might not be required"
          ],
          [
            "if",
            [
              "and",
              [
                "is-not-null",
                "_T._origin"
              ],
              [
                "eq",
                "USER_DEFINED",
                "_S.category"
              ]
            ],
            [
              "add",
              "$origin",
              "_T._origin"
            ]
          ]
        ]
      },
      "type": "dtl"
    },
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-share",
    "batch_size": 1,
    "namespaced_identifiers": false,
    "sink": {
      "set_initial_offset": "onload"
    },
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-transform",
      "type": "dataset"
    },
    "transform": [
      {
        "rules": {
          "default": [
            [
              "copy",
              "*"
            ],
            [
              "comment",
              "below apply is to recreate the original properties needed for doing share operations"
            ],
            [
              "merge",
              [
                "apply",
                "fixupAssociationTypes",
                "_S.$id"
              ]
            ],
            [
              "comment",
              "reshaping payload as the collect and share is not symmetric"
            ],
            [
              "comment",
              "associationTypeId is ignored during insert, and name is ignored during update so we can just include them like this"
            ],
            [
              "add",
              "$payload",
              [
                "dict",
                "associationTypeId",
                "_T.typeId",
                "label",
                "_S.label",
                "associationCategory",
                "_T.category",
                "name",
                [
                  "string",
                  [
                    "uuid"
                  ]
                ]
              ]
            ]
          ],
          "fixupAssociationTypes": [
            [
              "merge",
              [
                "dict",
                "category",
                [
                  "first",
                  [
                    "split",
                    "-",
                    "_S."
                  ]
                ],
                "typeId",
                [
                  "integer",
                  [
                    "last",
                    [
                      "split",
                      "-",
                      "_S."
                    ]
                  ]
                ]
              ]
            ]
          ]
        },
        "type": "dtl"
      },
      {
        "properties": {
          "operation_delete": "{{@ datatype @}}-delete",
          "operation_insert": "{{@ datatype @}}-insert",
          "operation_lookup": "{{@ datatype @}}-lookup",
          "operation_update": "{{@ datatype @}}-update",
          "primary_key": [
            "category",
            "typeId"
          ],
          "rest_system": "{{@ system @}}",
          "rules": {
            "lookup_rewrite": [
              [
                "comment",
                "lookup returns all objects, we need to find the one we are about to update"
              ],
              [
                "filter",
                [
                  "eq",
                  [
                    "tuples",
                    "_R._S.category",
                    "_R._S.typeId"
                  ],
                  [
                    "tuples",
                    "_S.category",
                    "_S.typeId"
                  ]
                ]
              ],
              [
                "copy",
                "*"
              ]
            ]
          },
          "share_dataset": "{{@ system @}}-{{@ datatype @}}-share"
        },
        "template": "transform-share-rest",
        "type": "template"
      }
    ],
    "type": "pipe"
  }
]